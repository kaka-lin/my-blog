<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed on Kaka's Blog</title><link>https://kaka-lin.github.io/my-blog/series/distributed/</link><description>Recent content in Distributed on Kaka's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 10 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://kaka-lin.github.io/my-blog/series/distributed/index.xml" rel="self" type="application/rss+xml"/><item><title>[PyTorch] Datasets &amp; DataLoaders</title><link>https://kaka-lin.github.io/my-blog/2022/08/datasets_dataloaders/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/datasets_dataloaders/</guid><description>Datasets &amp;amp; DataLoaders PyTorch provides two data primitives (基本資料型態) that allow you to use pre-loaded datasets as well as your own data, as below: torch.utils.data.Dataset Stores the samples and their corresponding labels Dataset 定義資料的結構並且將其包起來，利如: 一張影像和一個標籤 一張影</description></item><item><title>[PyTorch] Tensors (張量)</title><link>https://kaka-lin.github.io/my-blog/2022/08/tensors/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/tensors/</guid><description>Tensors Tensors are a specialized data structure that are very similar to arrays and matrices. In PyTorch, we use tensors to encode the inputs and outputs of a model, as well as the model’s parameters. 張量 (Tensor) 類似向量或矩陣，他是一個 n-維 (n-dimensional) 的資料型態，像是: 0</description></item><item><title>[Object Detection] 目標檢測評估指標 (Object Detection Metrics)</title><link>https://kaka-lin.github.io/my-blog/2022/08/object_detection/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/object_detection/</guid><description>目標檢測評估指標 (Object Detection Metrics) 2024/6/4 updated! Object Detection 需要執行兩個任務: decide whether an object exists in the scene: classification determine the position, the orientation and the shape of the object: localization 在現實場景中，一個場景會包含很多物件類別（如: 車輛</description></item><item><title>[Classification] 分類指標 (Classification Metrics)</title><link>https://kaka-lin.github.io/my-blog/2022/08/classification/</link><pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/classification/</guid><description>分類指標 (Classification Metrics) 2024/6/4 updated! Confuion Matrix (混淆矩陣) 分類器的目的在對樣本進行分類，例如，將樣本中的男女進行區分。不過，在預測分類的過程中，會有預測正確與預測錯誤</description></item><item><title>[DSA] Matrix Chain Multiplication | Dynamic Programming</title><link>https://kaka-lin.github.io/my-blog/2022/08/matrix_chain_multiplication/</link><pubDate>Sat, 13 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/matrix_chain_multiplication/</guid><description>Matrix Chain Multiplication Input: a sequence of n matries $(A_1, &amp;hellip;, A_n)$ Output: the product of $A_1A_2 &amp;hellip; A_n$ 根據 Associative (結合律) 可以將問題重新定義為: Matrix Chain Multiplication Problem 相關說明可參考: Observation Observation Each entry takes $q$ multiplications There are total $pr$ entries Time-Complexity: $\Theta(q)\Theta(pr) = \Theta(pqr)$ Associative (結合</description></item><item><title>[C++] Overloading(重載) &amp; Overriding (覆載) &amp; Plymorphism (多型)</title><link>https://kaka-lin.github.io/my-blog/2022/08/overloading_overriding_polymorphism.md/</link><pubDate>Fri, 12 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/overloading_overriding_polymorphism.md/</guid><description>Overloading(重載) &amp;amp; Overriding (覆載) &amp;amp; Plymorphism (多型) Smaple code 請參考: kaka-lin/Notes/C++/overloading_overriding_polymorphism/src/main.cc Overloading (重載、多載): 在一個類別 (class) 中，多個名稱相同，但參數不同的 Method (方法)。</description></item><item><title>[DSA] Longest Palindromic Substring | Dynamic Programming</title><link>https://kaka-lin.github.io/my-blog/2022/08/longest_palindromic_substring/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/08/longest_palindromic_substring/</guid><description>Longest Palindromic Substring Leetcode: 5. Longest Palindromic Substring My solution: kaka-lin/leetcode/00005_longest-palindromic-substring The detail of explain of solution please see as below. 思路與解法說明請看下面。 Question Given a string s, return the longest palindromic substring in s Example 1: Input: s = &amp;quot;babad&amp;quot; Output: &amp;quot;bab&amp;quot; Explanation: &amp;quot;aba&amp;quot; is also a valid answer. Example 2: Input: s = &amp;quot;cbbd&amp;quot; Output: &amp;quot;bb&amp;quot; Constraints: 1</description></item><item><title>[DSA] KD Tree</title><link>https://kaka-lin.github.io/my-blog/2022/06/kdtree/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/06/kdtree/</guid><description>K-D Tree KD Tree 又稱 K 維樹 (K-dimensional tree)，是一種可以對 K 維資料進行劃分的資料結構。可以看成二元搜尋樹的一種延伸，的對空間中的維度做劃分。主要應用於多維</description></item><item><title>[Docker] 容器與虛擬機</title><link>https://kaka-lin.github.io/my-blog/2022/06/docker_vs_vm/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/06/docker_vs_vm/</guid><description>Docker - 容器 (Container) 與虛擬機 (VM) 簡單來說: 虛擬機 (Virtual Machine) 以作業系統為中心 容器 (Container) 以應用程式為中心 Container VM 應用程式為單位 作業系統為單位 依賴 Host OS 的 kernel 任意 Guest OS 封裝應用程</description></item><item><title>[Python] 負數取餘數</title><link>https://kaka-lin.github.io/my-blog/2022/06/the_mod_of_negative_number/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2022/06/the_mod_of_negative_number/</guid><description>Python 負數取餘數 在 Python 中，取餘數的公式與其他語言一樣為: r = a - n * [a // n] 其中 r 表示餘數，a 是被除數，n 是除數。 在快上面公式前須先了解 // 在 Python 中的特</description></item><item><title>[DSA] Linked List 介紹</title><link>https://kaka-lin.github.io/my-blog/2021/12/introduction/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2021/12/introduction/</guid><description>Linked List 介紹 Singly Linked List Access Compare with array: linked list: sequential access array: random access Maintenance Dummy Head Node Python code dummy = ListNode(None) dummy.next = head curr = dummy Doubly Linked List 在 Singly Linked List 時，當你要移除特定node時會很麻煩， 因為你不知道他的前一個</description></item><item><title>[C++] 多重繼承 (Multiple Inheritance)</title><link>https://kaka-lin.github.io/my-blog/2021/01/multiple_inheritance/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2021/01/multiple_inheritance/</guid><description>最近面試被問到多重繼承相關的問題，簡單做個紀錄～ Multiple Inheritance (多重繼承) An object or class can inherit characteristics and features from more than one parent object or parent class. Virtual base classes Virtual base classes are used in virtual inheritance, is a way of preventing multiple &amp;quot;instance&amp;quot; of a</description></item><item><title>[C++] i++ 與 ++i 的差別</title><link>https://kaka-lin.github.io/my-blog/2021/01/i-_and_-i/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2021/01/i-_and_-i/</guid><description>發現自己很容易搞混這兩個，於是簡單做個筆記記錄～ i++ 與 ++i i++: post-increment 在這一行程式完成之後，再進行+1的動作 ++i: pre-increment 先進行+1，再進行後面的動作 Example int x; int y; //</description></item><item><title>[Qt] Qt's Paint System</title><link>https://kaka-lin.github.io/my-blog/2020/10/01_paint_system/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/10/01_paint_system/</guid><description>前言 最近因為再研究labeling tool的關係，於是又重新把Qt的繪圖系統重新研究了一下 Qt&amp;rsquo;s Paint System Qt's paint system enables painting on screen and print devices using the same API, and is primarily based on the QPainter, QPaintDevice,</description></item><item><title>[React] 01 - Hello React</title><link>https://kaka-lin.github.io/my-blog/2020/09/01_hello_react/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/09/01_hello_react/</guid><description>最近因為專案需要用到，於是又打開了兩年前在Udemy上買的React課程複習， 驚喜的發現講師有Update了2020版本上去，於是打算邊上課</description></item><item><title>[React] 02 - JSX 介紹</title><link>https://kaka-lin.github.io/my-blog/2020/09/02_hello_jsx/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/09/02_hello_jsx/</guid><description>JSX 介紹 首先看看下面這個變數宣告 const element = &amp;lt;h1&amp;gt;你好，世界！&amp;lt;/h1&amp;gt;; 這個有趣的標籤語法不是一個字串也不是HTML。 這</description></item><item><title>[Go] Ch1: Go Basics - 08 Concurrency</title><link>https://kaka-lin.github.io/my-blog/2020/08/08_concurrency/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/08/08_concurrency/</guid><description>Concurrency Go provides concurrency features as part of the core language. This module goes over goroutines and channels, and how they are used to implement different concurrency patterns. 複習: Concurrency and Parallelism Goroutines A goroutine is a lightweight thread managed by Go runtime. goroutine是輕量級的執行緒(lightwe</description></item><item><title>[DS] Build JupyterHub with docker</title><link>https://kaka-lin.github.io/my-blog/2020/08/jupyterhub/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/08/jupyterhub/</guid><description>JupyterHub Use Docker to build a JupyterHub for multiple users
Notices Before your start to build a JupyterHub with docker, please download the relative file at example.
Enable HTTPS (SSL encryption) Generate a self-signed certificate with openssl, as below:
create a self-signed certificate. For example, the following command will create a certificate valid for 365 days with both the key and certificate data written to the same file:
$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout jupyterhub.</description></item><item><title>[Python] Ch3: Coroutine - 01 Generator</title><link>https://kaka-lin.github.io/my-blog/2020/08/01_generator/</link><pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/08/01_generator/</guid><description>Generator functions allow you to declare a function that behaves like an iterator. 在開始介紹Generator前，先讓我們來看看Iterator。 Iterator vs Iterable Iteration: 當我們用一個循環(ex: for loop)遍歷一</description></item><item><title>[Go] Ch1: Go Basics - 07 Methods and Interfaces</title><link>https://kaka-lin.github.io/my-blog/2020/08/07_methods_interfaces/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/08/07_methods_interfaces/</guid><description>Methods and Interfaces Learn how to define methods on types, how to declare interfaces, and how to put everything together. Methods (方法) Go does not classes. However, you can define methods on types. A method is a function with a special receiver argument. The receiver appears in its own argument list between the func keword and the method name. Example The Abs() method has a receiver of</description></item></channel></rss>