<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Kaka's Blog</title><link>https://kaka-lin.github.io/my-blog/posts/</link><description>Recent content in Posts on Kaka's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 18 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kaka-lin.github.io/my-blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>[OS] Concurrency(並行) 與 Parallelism(平行)</title><link>https://kaka-lin.github.io/my-blog/2020/07/concurrency_parallelism/</link><pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/concurrency_parallelism/</guid><description>前言 最近在研究Asynchronous Model，上一篇介紹了同步、非同步、Blocking、Non-Blocking的觀念及Linux的I</description></item><item><title>[OS] I/O Models: 同步、非同步、阻塞、非阻塞</title><link>https://kaka-lin.github.io/my-blog/2020/07/io_models/</link><pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/io_models/</guid><description>在開發I/O相關程式時常常會遇到以下這四種名詞: 同步(Synchronous) 非同步(Asynchronous) 阻塞(Blocking) 非阻</description></item><item><title>[Python] Ch2: Process Management - 02 Python 多行程/多處理程序(Multi-Processing)</title><link>https://kaka-lin.github.io/my-blog/2020/07/02_multiprocessing/</link><pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/02_multiprocessing/</guid><description>行程/處理程序(Process) 複習作業系統(Operating System)中的對於行程(Process)的解釋： 行程(Process)是</description></item><item><title>[Go] Ch1: Go Basics - 06 Advanced Function</title><link>https://kaka-lin.github.io/my-blog/2020/07/06_advanced_function/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/06_advanced_function/</guid><description>Function as Arguments In Go, function is also a type. So we can pass function as another function&amp;rsquo;s parameters. 當我們將function當成參數使用時，必須在參數列表列出funtion本身的參數type與及其所需的</description></item><item><title>[Python] Ch2: Process Management - 01 Python 多執行緒(Multi-Thread)</title><link>https://kaka-lin.github.io/my-blog/2020/07/01_multithread/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/01_multithread/</guid><description>執行緒(Thread) 複習作業系統(Operating System)中的對於執行緒(thread)的解釋： 執行緒(thread)是OS能夠進</description></item><item><title>[Go] Ch1: Go Basics - 01 Go Basics</title><link>https://kaka-lin.github.io/my-blog/2020/07/01_go_basics/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/01_go_basics/</guid><description>Packages (套件) 每個 Go Program 都是由套件(packages)組成的 程式運行的入口是: package main package main func main() {} Import import ( &amp;quot;fmt&amp;quot; &amp;quot;math&amp;quot; ) Exported names In Go, a name is exported if it begins with a capital letter. For example, Pi is an exported</description></item><item><title>[Go] Ch1: Go Basics - 02 Flow Control</title><link>https://kaka-lin.github.io/my-blog/2020/07/02_flow_control/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/02_flow_control/</guid><description>For Go has only one looping construct, the foor loop for &amp;lt;init state&amp;gt;; &amp;lt;condition&amp;gt;; &amp;lt;post state&amp;gt; sum := 0 for i := 0; i &amp;lt; 10; i++ { sum += i } Go的for看起來跟C或Java中的依樣，但是沒有 ()，但{}是必要的，如上</description></item><item><title>[Go] Ch1: Go Basics - 03 Go Data Structure: `Structs`</title><link>https://kaka-lin.github.io/my-blog/2020/07/03_structs/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/03_structs/</guid><description>Structs (Structures) A struct or structure is a collection of fields. 1. Defining a struct Using struct keyword to create a new structure type. type StructName struct { field1 fieldType1 field2 fieldType2 ... } Example: type Vertex struct { X int Y int } 2. Accessing Struct Fields (Members) Struct fields are accessed using a dot. v := Vertrx{1, 2} v.X = 4 fmt.Println(v.X) // 4 Pointers to Structs 1.</description></item><item><title>[Go] Ch1: Go Basics - 04 Go Data Structure: `Array` &amp; `Slice`</title><link>https://kaka-lin.github.io/my-blog/2020/07/04_array_slice/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/04_array_slice/</guid><description>Array 1. Creating an Array The type [n]T is an array of n values of type T. The expression var a [10]int An array&amp;rsquo;s length is part of its type, so arrays cannot be resized. But Go provides a convenient way of working with array. 2. Array initialize a := [6]int{2, 3, 5, 7, 11, 13} // or a := []int{2, 3, 5, 7, 11, 13} Slices A slice is</description></item><item><title>[Go] Ch1: Go Basics - 05 Go Data Structure: `Maps`</title><link>https://kaka-lin.github.io/my-blog/2020/07/05_maps/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/05_maps/</guid><description>Maps A map maps key to value. Golang provides map data structure which implements hashtable. 1. Creating a Maps The zero value of a map is nil. A nil map has no keys, nor can keys be added. Method 1: like array // nil map var m map[keyTpye]valueType Note: 如果使用此方法來create map，還需要</description></item><item><title>[DSA] NTU CSIE DSA, 01: Array</title><link>https://kaka-lin.github.io/my-blog/2020/07/01_array/</link><pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/07/01_array/</guid><description>What is Array? 可以想像成櫃子，櫃子上有某些連續的編號 &amp;ndash;&amp;gt; 有編號的櫃子 Memory is (Generally Viewed as) Array 記憶體就是一個很大的Array address就是index Array as Memory Block in C/C++</description></item><item><title>[DB] Database Basics</title><link>https://kaka-lin.github.io/my-blog/2020/06/db_basics/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/db_basics/</guid><description>Database Basics Database Basics What is a Database The basic functions for manipulating a database: CRUD Database Management System (DBMS) 資料庫的類型 關聯式資料庫 非關聯式資料庫(NoSQL) SQL與NoSQL差異 Database Transaction SQL SQL語法 SQL - 四種語</description></item><item><title>[DB] Mysql Basics</title><link>https://kaka-lin.github.io/my-blog/2020/06/mysql-basics/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/mysql-basics/</guid><description>MySQL - Basics SQL Tutorial MySQL Documentation MySQL - Tutorial Quickstart for Cloud SQL for MySQL Load ipython-sql ipython-sql: 是jupyter notebook的extension，用來擴充jupyter對SQL的支援 其底層是使用</description></item><item><title>[DB] Sqlalchemy Basics</title><link>https://kaka-lin.github.io/my-blog/2020/06/sqlalchemy-basics/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/sqlalchemy-basics/</guid><description>SQLAlchemy - basics SQLAlchemy - Tutorial import sqlalchemy from sqlalchemy import create_engine, Table from sqlalchemy.ext.declarative import declarative_base from sqlalchemy import Column, ForeignKey, Integer, String, Numeric from sqlalchemy.orm import sessionmaker sqlalchemy.__version__ Connect Database # SQLite #connect_db = 'sqlite:///test.db' # MySQL connect_db = 'mysql+mysqldb://root:&amp;lt;passwd&amp;gt;@35.201.196.222/kaka_test' ''' create_engine 此時只有建立SQLAlchemy Engine instance(</description></item><item><title>[DB] Sqlite Basics</title><link>https://kaka-lin.github.io/my-blog/2020/06/sqlite-basics/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/sqlite-basics/</guid><description>SQLite - Basics SQL - Tutorial SQL As Understood By SQLite(官網) SQLite - Tutorial Load ipython-sql ipython-sql: 是jupyter notebook的extension，用來擴充jupyter對SQL的支</description></item><item><title>[DevOps] Gitlab CI/CD</title><link>https://kaka-lin.github.io/my-blog/2020/06/gitlab_ci_cd/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/gitlab_ci_cd/</guid><description>GitLab CI/CD GitLab CI/CD How GitLab CI/CD works Getting started with GitLab CI/CD 1. Build a Project 2. Configuring GitLab Runners 2-1. Use Shared Runners 2-2. Set up a Specific Runners Exmaple with Docker 2-3. Introduction to Shared, Specific and Group Runners [Optional] 3. Creating a .gitlab-ci.yml file 4. Results GitLab CI/CD is a powerful tool built into GitLab that allows you to apply all the continuous methods to your</description></item><item><title>[DS] Google Trends 01: Operate with Python</title><link>https://kaka-lin.github.io/my-blog/2020/06/01_google_trends_and_python/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/01_google_trends_and_python/</guid><description>Get and Analysis the result of Google Trends with Python Google Trends (Google搜尋趨勢) 是由Google 提供的線上搜尋趨勢服務，可以簡單的看出最近哪些關鍵字是熱門的。 但大規模分析 Google</description></item><item><title>[DS] Google Trends 02: Convert to Google Data Studio</title><link>https://kaka-lin.github.io/my-blog/2020/06/02_google_trends_to_google_data_studio/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/02_google_trends_to_google_data_studio/</guid><description>Google Trends to Google Data Studio Get the result form Google Trends Using gspread transform the data of Google Trends to Google Sheets Import the file of Google Sheets into Google Data Studio Get the result from Goolge Trends import pandas as pd from pytrends.request import TrendReq # Create an instance(實例) of TrendReq pytrend = TrendReq() # Build a</description></item><item><title>[DS] Matplotlib show Chinese</title><link>https://kaka-lin.github.io/my-blog/2020/06/matplotlib_chinese/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/matplotlib_chinese/</guid><description>Matplotlib 顯示中文 Ref: Text with non-latin glyphs 下載思源體（下面兩種任選一種皆可） 思源黑體 思源宋體 Then, Windows Mac Ubuntu Windows 查看matplotlib套件安裝位置 import matplotlib print(matplotlib.__file__) Output: C:\Users\USER\Miniconda3\envs\tensorflow\lib\site-packages\matplotlib\__init__.py 可以得知，ma</description></item><item><title>[Python] Ch1: Python Basics - 01 Python Basics</title><link>https://kaka-lin.github.io/my-blog/2020/06/01_python_basics/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://kaka-lin.github.io/my-blog/2020/06/01_python_basics/</guid><description>Python Basics Interactive Shell Compiled language v.s. Interpreted language Compiled language (編譯語言) Through compiler convert source code into machine code and execute it. C/C++ Go Rust Interpreted language (直譯語言) Execute the code step-by-step. Python JavaScript Ruby PHP Python Interactive Shell Python is a Interpreted language. It means it excutes the code line by line. Python provides a Python Shell (Python</description></item></channel></rss>